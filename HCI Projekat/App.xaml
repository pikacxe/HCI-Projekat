<Application x:Class="HCI_Projekat.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:HCI_Projekat"
             StartupUri="LoginWindow.xaml">
    <Application.Resources>
        <Style TargetType="Border" x:Key="RoundedBorder">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#4C5760"/>
            <Setter Property="CornerRadius" Value="25"/>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush>
                        <GradientStop Color="#08C4C4" Offset="0.25"/>
                        <GradientStop Color="#9DFBFB" Offset="0.35"/>
                        <GradientStop Color="#9DFBFB" Offset="0.65"/>
                        <GradientStop Color="#08C4C4" Offset="0.85"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Padding" Value="0"/>
        </Style>
        <LinearGradientBrush x:Key="GrayGradient" StartPoint="0,1" EndPoint="1,1">
            <GradientStop Color="DarkGray" Offset="0.05"/>
            <GradientStop Color="#4C5760" Offset="0.15"/>
            <GradientStop Color="#4C5760" Offset="0.85"/>
            <GradientStop Color="DarkGray" Offset="0.95"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="GreenGradient" StartPoint="0,1" EndPoint="1,1">
            <GradientStop Color="#7EF500" Offset="0.05"/>
            <GradientStop Color="#29BF12" Offset="0.15"/>
            <GradientStop Color="#29BF12" Offset="0.85"/>
            <GradientStop Color="#7EF500" Offset="0.95"/>
        </LinearGradientBrush>
        <Style TargetType="Window" x:Key="TemplateStyle">
            <Setter Property="ResizeMode" Value="NoResize"/>
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="AllowsTransparency" Value="True"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>
        <Style TargetType="Line" x:Key="BaseLine">
            <Setter Property="StrokeThickness" Value="6"/>
            <Setter Property="Margin" Value="10 0 10 0"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="X1" Value="0"/>
            <Setter Property="Stroke">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,1" EndPoint="1,1">
                        <GradientStop Color="DarkGray" Offset="0.05"/>
                        <GradientStop Color="#4C5760" Offset="0.15"/>
                        <GradientStop Color="#4C5760" Offset="0.85"/>
                        <GradientStop Color="DarkGray" Offset="0.95"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Label" x:Key="CenteredLabel">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="TopBarTransparent">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Transparent"/>
            <Setter Property="Text" Value=""/>
            <Setter Property="Panel.ZIndex" Value="2"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="CenteredTextBlock">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="HyperTextBlock">
            <Setter Property="FontSize" Value="32"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="#4A8F00"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#7EF500"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBlock" x:Key="CommonTextBlock">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        </Style>
        <Style TargetType="TextBox" x:Key="CommonTextBox">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Margin" Value="20 10"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="PasswordBox" x:Key="CommonPasswordBox">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Margin" Value="20 10"/>
        </Style>
        <Style TargetType="Button" x:Key="XButton">
            <Setter Property="FontSize" Value="28"/>
            <Setter Property="Background" Value="#F5516D"/>
            <Setter Property="BorderBrush" Value="#F21B3F"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="#9A0921"/>
            <Setter Property="Content" Value="❌"/>
            <Setter Property="Panel.ZIndex" Value="3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#E70D32"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#4C5760" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" x:Key="SaveButton">
            <Setter Property="FontSize" Value="28"/>
            <Setter Property="Background" Value="#ADF6A2"/>
            <Setter Property="BorderBrush" Value="#29BF12"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="#29BF12"/>
            <Setter Property="Panel.ZIndex" Value="3"/>
            <Setter Property="Content" Value="💾"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#7EF500"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#4C5760" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="CustomCheckboxTemplate" TargetType="{x:Type CheckBox}">
            <StackPanel Orientation="Horizontal">
                <Image x:Name="CheckIcon" Source="resources/unchecked.png"/>
                <ContentPresenter  VerticalAlignment="Center" HorizontalAlignment="Center" />
            </StackPanel>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="CheckIcon" Property="Source" Value="resources/check.png"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="Gray"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="CustomCheckboxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="Template" Value="{StaticResource CustomCheckboxTemplate}" />
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="CustomToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
        </Style>

        <Style x:Key="ColorPicker" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        </Style>
    </Application.Resources>
</Application>
